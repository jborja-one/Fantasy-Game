using System;using System.Data;using Core.Models;using Dapper;namespace API.Models{    public class PlayerRepository    {        private readonly IDbConnection _conn;        public PlayerRepository(IDbConnection conn)        {            _conn = conn;        }        public Player GetPlayerById(int playerId)        {            return _conn.QuerySingleOrDefault<Player>("SELECT * FROM Players WHERE PlayerId = @playerId", new { playerID = playerId });        }                        public IEnumerable<Player>GetAllPlayers()        {            return _conn.Query<Player>("SELECT * FROM players");        }        public int CreatePlayer(Player newPlayer)        {            return _conn.Execute("INSERT INTO Players (PlayerId, Name, CharacterId, Status) VALUES (@playerId, @name, characterId, status);",                new { playerId = newPlayer.PlayerId, name = newPlayer.Name, characterId = newPlayer.CharacterId, status = newPlayer.Status });        }        public void UpdatePlayer(Player player)        {            _conn.Execute("UPDATE players SET Name = @name, Status = @status WHERE CharacterId = @characterId;",                new { name = player.Name, status = player.Status });        }        public void DeletePlaer(int playerId)        {            _conn.Execute("DELETE FROM Characters WHERE PlayerId = @playerId;", new { playerId = playerId});            _conn.Execute("DELETE FROM Players WHERE PlayerId = @playerId;", new { playerId = playerId});        }    }}