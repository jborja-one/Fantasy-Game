using System;using API.DTOs;using Core.Repositories;namespace API.Services{    public class AbilityService    {        private readonly CharacterRepository _characterRepository;        public AbilityService(CharacterRepository characterRepository)        {            _characterRepository = characterRepository;        }        public ExecutionResultDto ExecuteAbility(int characterId, string abilityName)        {            var character = _characterRepository.GetCharacterById(characterId);            if(character == null)            {                return new ExecutionResultDto { Success = false, Message = "Character not found" };            }            var ability = character.Job.Abilities.FirstOrDefault(a => a.Name == abilityName);            if(ability == null || !ability.CanPerform(character))            {                return new ExecutionResultDto { Success = false, Message = "Ability cannot be performed" };            }            ability.Execute(character, null);            return new ExecutionResultDto            {                Success = true,                Message = $"Ability {abilityName} executed succesfully."            };        }    }}