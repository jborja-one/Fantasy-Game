using System;using API.DTOs;using Core.Repositories;namespace API.Models{    public class ActionService    {        private readonly CharacterRepository _characterRepository;        public ActionService(CharacterRepository characterRepository)        {            _characterRepository = characterRepository;        }        //public ExecutionResultDto ExecuteAction(int characterId, string actionName)        //{        //    var character = _characterRepository.GetCharacterById(characterId);        //    if (character == null)        //    {        //        return new ExecutionResultDto { Success = false, Message = "Character not found" };        //    }        //    var action = character.Job.Actions.FirstOrDefault(a => a.Name == actionName);        //    if(action == null || !action.CanPerform(character))        //    {        //        return new ExecutionResultDto { Success = false, Message = "Action cannot be performed" };        //    }        //    int damage = action.Execute(character);        //    return new ExecutionResultDto        //    {        //        Success = true,        //        Message = $"Action {actionName} executed succesfully",        //        DamageDealt = damage        //    };        //}    }}