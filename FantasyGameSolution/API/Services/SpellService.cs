using System;using API.DTOs;using Core.Repositories;namespace API.Services{    public class SpellService    {        private readonly CharacterRepository _characterRepository;        public SpellService(CharacterRepository characterRepository)        {            _characterRepository = characterRepository;        }        public ExecutionResultDto ExecuteSpell(int characterId, string spellName)        {            var character = _characterRepository.GetCharacterById(characterId);            if (character == null)                return new ExecutionResultDto { Success = false, Message = "Character not found." };            var spell = character.Job.Spells.FirstOrDefault(a => a.Name == spellName);            if (spell == null || !spell.CanPerform(character))                return new ExecutionResultDto { Success = false, Message = "Spell cannot be performed" };            int damage = spell.Execute(character);            return new ExecutionResultDto            {                Success = true,                Message = $"Spell {spellName} executed successfully",                DamageDealt = damage            };        }    }}